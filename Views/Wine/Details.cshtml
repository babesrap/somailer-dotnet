@model dotnetprojekt.Models.Wine

@{
    ViewData["Title"] = Model.Name;
    
    decimal avgRating = Model.Ratings.Any() ? Model.Ratings.Average(r => r.RatingValue) : 0;
    int fullStars = (int)Math.Floor(avgRating);
    bool hasHalfStar = (avgRating - fullStars) >= 0.5M;
    int totalReviews = Model.Ratings.Count;
}

<div class="bg-beige-100 min-h-screen py-10">
    <div class="container mx-auto px-4">
        <!-- Back Button (Top) -->
        <div class="mb-4">
            <a href="javascript:history.back()" class="text-wine-600 hover:text-wine-800 font-medium flex items-center inline-block">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                Back to Search Results
            </a>
        </div>
        
        <div class="bg-white rounded-xl shadow-md overflow-hidden">
            <!-- Wine Header -->
            <div class="bg-beige-200 p-6 flex flex-col md:flex-row">
                <div class="md:w-1/3 mb-6 md:mb-0 flex items-center justify-center">
                    <div class="w-64 h-64 bg-white rounded-lg shadow-inner p-4 flex items-center justify-center">
                        <img src="/images/labels/@(Model.Id).jpeg" 
                             alt="@Model.Name label" 
                             class="max-w-full max-h-full object-contain"
                             onerror="this.onerror=null; this.src='/images/wine-placeholder.jpg';">
                    </div>
                </div>
                <div class="md:w-2/3 md:pl-8">
                    <div class="flex flex-wrap items-center mb-2">
                        <h1 class="text-3xl font-bold text-gray-800 mr-2">@Model.Name</h1>
                        @if (Model.Type != null)
                        {
                            <span class="px-3 py-1 text-sm font-semibold bg-wine-100 text-wine-800 rounded-full">
                                @Model.Type.Name
                            </span>
                        }
                    </div>
                    
                    <div class="mb-4">
                        <div class="flex items-center">
                            @for (int i = 0; i < 5; i++)
                            {
                                if (i < fullStars)
                                {
                                    <svg class="w-5 h-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                    </svg>
                                }
                                else if (i == fullStars && hasHalfStar)
                                {
                                    <svg class="w-5 h-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" clip-path="polygon(0 0, 50% 0, 50% 100%, 0 100%)"></path>
                                    </svg>
                                }
                                else
                                {
                                    <svg class="w-5 h-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                    </svg>
                                }
                            }
                            <span class="ml-1 text-gray-600">@avgRating.ToString("0.0") (@totalReviews @(totalReviews == 1 ? "review" : "reviews"))</span>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-3 mb-4">
                        @if (Model.Country != null)
                        {
                            <div>
                                <span class="font-semibold text-gray-700">Country:</span>
                                <span class="text-gray-600 ml-2">@Model.Country.Name</span>
                            </div>
                        }
                        
                        <div>
                            <span class="font-semibold text-gray-700">ABV:</span>
                            <span class="text-gray-600 ml-2">@Model.ABV%</span>
                        </div>
                        
                        @if (Model.Acidity != null)
                        {
                            <div>
                                <span class="font-semibold text-gray-700">Acidity:</span>
                                <span class="text-gray-600 ml-2">@Model.Acidity.Name</span>
                            </div>
                        }
                        
                        @if (Model.Vintages.Length > 0)
                        {
                            <div>
                                <span class="font-semibold text-gray-700">Vintages:</span>
                                <span class="text-gray-600 ml-2">@string.Join(", ", Model.Vintages)</span>
                            </div>
                        }
                    </div>

                    <div class="mb-4">
                        <h2 class="text-xl font-semibold text-gray-800 mb-2">Description</h2>
                        <p class="text-gray-700">
                            @(string.IsNullOrEmpty(Model.Elaborate) ? "No description available for this wine." : Model.Elaborate)
                        </p>
                    </div>
                </div>
            </div>
            
            <!-- Wine Details -->
            <div class="p-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <!-- Grape Varieties -->
                    <div class="bg-beige-50 p-5 rounded-lg">
                        <h2 class="text-xl font-semibold text-gray-800 mb-4">Grape Varieties</h2>
                        @if (Model.Grapes != null && Model.Grapes.Any())
                        {
                            <div class="flex flex-wrap gap-2">
                                @foreach (var grape in Model.Grapes)
                                {
                                    <span class="px-3 py-2 bg-beige-100 text-gray-700 rounded-lg">
                                        @grape.Name
                                    </span>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-gray-600">No grape varieties specified for this wine.</p>
                        }
                    </div>
                    
                    <!-- Food Pairings -->
                    <div class="bg-beige-50 p-5 rounded-lg">
                        <h2 class="text-xl font-semibold text-gray-800 mb-4">Pairs Well With</h2>
                        @if (Model.PairedDishes != null && Model.PairedDishes.Any())
                        {
                            <div class="flex flex-wrap gap-2">
                                @foreach (var dish in Model.PairedDishes)
                                {
                                    <span class="px-3 py-2 bg-beige-100 text-gray-700 rounded-lg">
                                        @dish.Name
                                    </span>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-gray-600">No food pairings specified for this wine.</p>
                        }
                    </div>
                </div>
                
                <!-- Reviews Section -->
                <div class="mt-8">
                    <h2 class="text-xl font-semibold text-gray-800 mb-4">Reviews (@totalReviews)</h2>
                    
                    @if (Model.Ratings.Any())
                    {
                        <div class="space-y-4">
                            @foreach (var rating in Model.Ratings.OrderByDescending(r => r.Date).Take(5))
                            {
                                <div class="bg-white border border-gray-200 rounded-lg p-4">
                                    <div class="flex items-center mb-2">
                                        @for (int i = 0; i < 5; i++)
                                        {
                                            if (i < rating.RatingValue)
                                            {
                                                <svg class="w-4 h-4 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                                                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                                </svg>
                                            }
                                            else
                                            {
                                                <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                                </svg>
                                            }
                                        }
                                        <span class="ml-2 text-sm text-gray-600">
                                            @rating.Date.ToString("MMM dd, yyyy")
                                        </span>
                                    </div>
                                    <p class="text-gray-700">No comment provided.</p>
                                </div>
                            }
                        </div>
                        
                        @if (Model.Ratings.Count > 5)
                        {
                            <div class="mt-4 text-center">
                                <button class="text-wine-600 hover:text-wine-800 font-medium">View All @Model.Ratings.Count Reviews</button>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-gray-600">No reviews yet for this wine.</p>
                    }
                </div>
                
                <!-- Similar Wines Section (placeholder) -->
                <div class="mt-8">
                    <h2 class="text-xl font-semibold text-gray-800 mb-4">You May Also Like</h2>
                    <p class="text-gray-600">Similar wine recommendations would appear here.</p>
                </div>
            </div>
            
            <!-- Back Button -->
            <div class="bg-beige-50 p-4 flex justify-between">
                <a href="/Search" class="text-wine-600 hover:text-wine-800 font-medium">Search More Wines</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Additional JavaScript if needed
    </script>
}